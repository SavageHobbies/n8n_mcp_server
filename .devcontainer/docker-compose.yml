version: '3.8'
services:
  app:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile # This points to the Dockerfile that builds your dev container image
    command: sleep infinity # Keeps the container running
    volumes:
      - ..:/workspaces/${localWorkspaceFolderBasename}:cached # Mounts your entire project folder into the container
    networks:
      - default # Connects to the default network for dev container services
    environment:
      # LOCAL DEVELOPMENT DATABASE CONNECTION (connects to the 'db' service defined below)
      DATABASE_URL: postgresql://devuser:devpassword@db:5432/devdb
      DB_HOST: db
      DB_NAME: devdb
      DB_PASSWORD: devpassword
      DB_PORT: "5432"
      DB_SSLMODE: disable # Local dev DB usually doesn't need SSL
      DB_USER: devuser
      # Your other API keys can be referenced here from your local .env file
      # For now, these are blank. You can fill them in your local .env file later if needed for local dev.
      GEMINI_API_KEY: ""
      AMAZON_CLIENT_ID: ""
      AMAZON_CLIENT_SECRET: ""
      AMAZON_REFRESH_TOKEN: ""
      AMAZON_REGION: ""
      EBAY_APP_ID: ""
      EBAY_DEV_ID: ""
      EBAY_CERT_ID: ""
      EBAY_ENVIRONMENT: ""
      UPC_DATABASE_API_KEY: ""
      # Other app environment variables
      NODE_ENV: "development"
      PORT: 3000

  db:
    image: postgres:16-alpine # Using a lightweight PostgreSQL 16 image
    restart: unless-stopped
    environment:
      POSTGRES_DB: devdb
      POSTGRES_USER: devuser
      POSTGRES_PASSWORD: devpassword
    volumes:
      - postgres_devcontainer_data:/var/lib/postgresql/data # Persistent volume for local DB data
    networks:
      - default

volumes:
  postgres_devcontainer_data: {} # Declares the named volume for local PostgreSQL data persistence

networks:
  default:
    driver: bridge # Default bridge network for services within this compose file